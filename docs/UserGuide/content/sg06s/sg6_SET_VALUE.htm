<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">

    <!-- This Source Code Form is subject to the terms of the Mozilla Public
       - License, v. 2.0. If a copy of the MPL was not distributed with this
       - file, You can obtain one at https://mozilla.org/MPL/2.0/. -->
    <!-- Copyright © 1994-1998 Colton Software Limited
       - Copyright © 1998-2015 R W Colton -->

    <link href="../common/guide.css" rel="stylesheet" type="text/css">
    <title>SET_VALUE</title>
</head>
<body>
    <object type="application/x-oleobject" classid="clsid:1e2a7bd0-dab9-11d0-b93a-00c04fc99f9e">
        <param name="Keyword" value="Spreadsheet functions, Miscellaneous, SET_VALUE" />
        <param name="Keyword" value="Miscellaneous functions, set value in cell" />
        <param name="Keyword" value="Miscellaneous functions, set values in range" />
    </object>

    <h1><a name="set_value" id="set_value"></a>SET_VALUE</h1>

    <p class="csg-function-subheading">Syntax #1:</p>
    <p class="csg-function-declaration">
        SET_VALUE(
        <span class="csg-function-parameter">cell_reference</span>,
        <span class="csg-function-parameter">formula</span> )
    </p>
    <p>Stores the result value of the <span class="csg-function-parameter">formula</span> as a value in the given cell (which must not contain a formula).</p>

    <p class="csg-function-subheading">Example:</p>
    <pre class="csg-sample-indent">SET_VALUE([fred]A1, 56)</pre>
    <p>sets the value of cell <code>A1</code> in the worksheet <code>fred</code> to <code>56</code>.</p>

    <p>
        Note that <code>SET_VALUE</code> is the only spreadsheet function which overwrites other cells.
        You need to use it carefully because any data you type into the target cells will be overwritten the next time <code>SET_VALUE</code> recalculates.
    </p>

    <p class="csg-function-subheading"><br />Syntax #2:</p>
    <p class="csg-function-declaration">
        SET_VALUE(
        <span class="csg-function-parameter"><a href="../sg06/sg6_ranges.htm">range</a></span>,
        <span class="csg-function-parameter"><a href="../sg06/sg6_arrays.htm">array</a></span> )
    </p>
    <p>
        Enables you to store the contents of the <span class="csg-function-parameter"><a href="../sg06/sg6_arrays.htm">array</a></span> across the given
        <span class="csg-function-parameter"><a href="../sg06/sg6_ranges.htm">range</a></span> of cells.
    </p>

    <p class="csg-function-subheading">Example:</p>
    <pre class="csg-sample-indent">SET_VALUE(F1:F10, E1:E10*VAT)</pre>
    <p>
        multiplies each of the cells from <code>E1</code> to <code>E10</code> by the current value of the name <code>VAT</code>
        and places the result in the cells <code>F1</code> to <code>F10</code>.
        Using arrays and <code>SET_VALUE</code> in this way can remove large numbers of formulae from your worksheets in this way and save memory;
        cells <code>F1:F10</code> could each have contained a formula <code>E1*VAT</code>, <code>E2*VAT</code>, and so on.
    </p>

    <p>You can also combine <code>SET_VALUE</code> with functions which return an array, to write the result of the function into a range of cells. For example:</p>
    <pre class="csg-sample-indent">SET_VALUE(A10:E15, TRANSPOSE(A1:E5)</pre>
    <p>writes the transposed version of the range <code>A1:E5</code> into the cells <code>A10:E15</code>. Also,</p>
    <pre class="csg-sample-indent">SET_VALUE(C1:C10, SORT(A1:A10))</pre>
    <p>sorts the values in <code>A1:A10</code> and puts the sorted array in <code>/C1:C10</code>.</p>

    <p class="csg-function-subheading"><br />Syntax #3:</p>
    <p class="csg-function-declaration">
        SET_VALUE(
        <span class="csg-function-parameter"><a href="../sg06/sg6_ranges.htm">range</a></span> or <span class="csg-function-parameter"><a href="../sg06/sg6_arrays.htm">array</a></span>,
        <span class="csg-function-parameter">value</span>,
        <span class="csg-function-parameter">x</span>:<span class="csg-function-parameter-type">Number</span>,
        <span class="csg-function-parameter">y</span>:<span class="csg-function-parameter-type">Number</span> )
    </p>
    <p>With the addition of the two optional parameters <span class="csg-function-parameter">x</span> and <span class="csg-function-parameter">y</span> <code>SET_VALUE</code> is able to write into a specified position in ranges and arrays.</p>

    <p class="csg-function-subheading">Example:</p>
    <pre class="csg-sample-indent">SET_VALUE(A1, 27, 2, 3)</pre>
    <p>will replace the entry specified by the second column and third row in the array contained in <code>A1</code> with the value <code>27</code>.</p>

    <nav class="navfooter">
        <table id="navfooter">
            <tr>
                <td><a accesskey="p" href="../sg06s/sg6_SET_NAME.htm">Prev</a> </td>
                <td><a accesskey="u" href="../sg/sg05_miscellaneous_functions.htm">Up</a></td>
                <td> <a accesskey="n" href="../sg06s/sg6_SORT.htm">Next</a></td>
            </tr>
        </table>
    </nav>
</body>
</html>
