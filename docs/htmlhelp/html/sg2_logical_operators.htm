<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta name="generator" content="HTML Tidy for Windows (vers 14 February 2006), see www.w3.org" />
  <meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />

  <link href="usguide.css" rel="stylesheet" type="text/css" />
  <title>Logical operators</title>
</head>

<body>
  <!-- This Source Code Form is subject to the terms of the Mozilla Public
     - License, v. 2.0. If a copy of the MPL was not distributed with this
     - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
  <!-- Copyright (C) 1994-1998 Colton Software Limited
     - Copyright (C) 1998-2015 R W Colton -->
  <object type="application/x-oleobject" classid="clsid:1e2a7bd0-dab9-11d0-b93a-00c04fc99f9e">
    <param name="Keyword" value="Logical operators" />
  </object>

  <h1><a name="logical_operators" id="logical_operators"></a>Logical operators</h1>

  <p>The logical operators operate on Boolean (logical) values.</p>

  <p><code>&amp;&nbsp;</code>AND</p>

  <p>If both sides of an AND operator are <code>TRUE</code>, the Boolean value <code>TRUE</code> is returned; otherwise <code>FALSE</code> is returned.</p>

  <p>Note that if the left-hand side of an AND operator in an expression is <code>FALSE</code>, the right-hand side is not evaluated.</p>

  <p><code>!&nbsp;</code>unary NOT</p>

  <p>The NOT operator returns the logical negation of the expression.</p>

  <p><code>&brvbar;&nbsp;</code>OR (note that this is usually shift-\ on the keyboard)</p>

  <p>If either side of an OR operator is <code>TRUE</code>, the Boolean value <code>TRUE</code> is returned; otherwise <code>FALSE</code> is returned.</p>

  <p>Note that if the left-hand side of an OR operator in an expression is <code>TRUE</code>, the right-hand side is not evaluated.</p>

  <p>In Fireworkz, Boolean values and numeric values are freely convertible:</p>

  <p>When numeric values are used in operations that require Boolean values,
  Fireworkz always maps the number zero to the Boolean value <code>FALSE</code>
  and any non-zero number to the Boolean value <code>TRUE</code>.</p>

  <p>When Boolean values are used in operations or calculations that require numeric values,
  Fireworkz always maps the Boolean value <code>FALSE</code> to the number <code>0</code> (zero)
  and <code>TRUE</code> to the number <code>1</code> (one).</p>

  <h2>Example:</h2>

  <p>Logical operators are often used to construct the condition required by the <code>IF</code> function. The following function adds the contents of cells <code>A2</code> and <code>B2</code> only if the contents of both cells <code>A1</code> and <code>B1</code> match the specified criteria:</p>

  <p>IF(A1=6 &amp; B1=4, SUM(A2, B2), 0)</p>

<div class="navfooter">
<hr/>
<table width="100%" summary="Navigation footer">
<tr>
<td width="40%" align="left"><a accesskey="p" href="sg2_relational_operators.htm">Prev</a> </td>
<td width="20%" align="center"><a accesskey="u" href="sg2_using_operators_in_formulae.htm">Up</a></td>
<td width="40%" align="right"> <a accesskey="n" href="sg2_operator_precedence.htm">Next</a></td>
</tr>
</table>
</div>
</body>
</html>
